---
# venv
- name: 01 create CKAN app dir
  file:
    path: '{{ ckan_app_dir }}'
    mode: ug+rwx
    owner: root
    group: root
    state: directory

- name: 02 Install virtualenv via pip
  pip:
    name: virtualenv
    executable: pip3

- name: 03 pip install setuptools
  pip:
    name: 'setuptools==44.1.0'
    virtualenv: '{{ ckan_app_dir }}'
    virtualenv_python: 'python3.7'
    state: present

- name: 04 install ckan
  pip:
    name: 'git+https://github.com/ckan/ckan.git@ckan-2.9.0#egg=ckan[requirements]'
    virtualenv: '{{ ckan_app_dir }}'
    virtualenv_python: python3.7
    editable: yes   # --editable <path/url>   Install a project in editable mode
    state: present

# postgres
- name: 05 Postgres packages
  package:
    name: "{{ item }}"
    state: present
  loop:
    - python3-psycopg2
    - postgresql
    - postgresql-client
    - postgresql-contrib
  notify: restart_postgres

- name: 06 Postgres user
  become_user: postgres
  become: yes
  postgresql_user:
    name: '{{ ckan_db_user }}'
    password: '{{ ckan_db_pwd }}'
    expires: 'infinity'

- name: 07 Postgres db
  become: yes
  become_user: postgres
  postgresql_db:
    name: '{{ ckan_db }}'
    encoding: UTF-8

- name: 08 Postgres user rights in db
  become: yes
  become_user: postgres
  postgresql_user:
    name: '{{ ckan_db_user }}'
    db: '{{ ckan_db }}'
    expires: 'infinity'
    state: present
    priv: ALL

# ckan config
- name: 09 create CKAN dirs
  file:
    path: '{{ item }}'
    state: directory
    recurse: yes
    owner: root
    group: root
    mode: 'a+rw'
  with_items:
    - '{{ ckan_config_dir }}'
    - '{{ ckan_storage_dir }}'
    - '{{ ckan_storage_dir }}/webassets'
    - '{{ ckan_log_dir }}'

- name: 10 Generate CKAN config file
  command: '{{ ckan_app_dir }}/bin/ckan generate config {{ ckan_config_dir }}/ckan.ini'

- name: 11 Edit CKAN config file app:main section
  community.general.ini_file:
    path: '{{ ckan_config_dir }}/ckan.ini'
    section: 'app:main'
    option: '{{ item.key }}'
    value: '{{ item.value }}'  #postgresql://{{ckan_db_user}}:{{ckan_db_pwd}}@localhost/{{ckan_db}}
    backup: no
  with_dict: {
  sqlalchemy.url: 'postgresql://{{ckan_db_user}}:{{ckan_db_pwd}}@localhost/{{ckan_db}}',
  ckan.site_url: '{{ vm_url }}',
  ckan.root_path: '{{ ckan_url_path }}',
  ckan.site_id: '{{ ckan_site_id }}',
  ckan.storage_path: '{{ ckan_storage_dir }}',
  ckan.max_resource_size: '{{ ckan_max_resource_size }}',
  ckan.max_image_size: '{{ ckan_max_image_size }}',
  ckan.resource_proxy.chunk_size: '8192',
  ckan.resource_proxy.max_file_size: '5000000',
  ckan.webassets.path: '{{ ckan_storage_dir }}/webassets',
  ckan.site_title: '{{ ckan_site_title }}',
  ckan.site_description: '{{ ckan_site_description }}',
  ckan.site_intro_text: '{{ ckan_site_intro_text }}',
  ckan.site_logo: '{{ ckan_site_logo }}',
  ckan.site_about: '{{ ckan_site_about }}',
  solr_url: '{{ solr_url }}'
  }

- name: 12 Edit CKAN config file server:main section
  community.general.ini_file:
    path: '{{ ckan_config_dir }}/ckan.ini'
    section: 'server:main'
    option: '{{ item.key }}'
    value: '{{ item.value }}'
    backup: no
  with_dict: {
  port: '{{ ckan_port }}'
  }

- name: 13 Link ckan who.ini
  file:
    src: '{{ ckan_app_dir }}/src/ckan/who.ini'
    dest: '{{ ckan_config_dir }}/who.ini'
    state: link
  notify: ckan_tmp_dir_writable

- name: 14 Add root_path who.ini post_login_url & post_logout_url
  community.general.ini_file:
    path: '{{ ckan_app_dir }}/src/ckan/who.ini'
    section: 'plugin:friendlyform'
    option: '{{ item.key }}'
    value: '{{ item.value }}'
    backup: no
  with_dict: {
  post_login_url: '{{ ckan_url_path }}/user/logged_in',
  post_logout_url: '{{ ckan_url_path }}/user/logged_out'
  }

- name: 15 Set ckan promoted image
  get_url:
    url: '{{ ckan_frontpage_img_url }}'
    dest: '{{ ckan_app_dir }}/src/ckan/ckan/public/base/images/placeholder-420x220.png'
    mode: 'a+rw'

- name: 16 Replace "This is a featured section"
  replace:
    path: '{{ ckan_app_dir }}/src/ckan/ckan/templates/home/snippets/promoted.html'
    regexp: '"This is a featured section"'
    replace: '""' # breaks if is empty

# sorl
- name: 17 remove solr schema.xml
  file:
    path: /etc/solr/conf/schema.xml
    state: absent

- name: 18 pip install lxml
  pip:
    name: 'lxml'
    state: present

- name: 19 link ckan solr
  file:
    src: '{{ ckan_app_dir }}/src/ckan/ckan/config/solr/schema.xml'
    dest: /etc/solr/conf/schema.xml
    state: link

- name: 20 Change the default port Tomcat from 8080
  community.general.xml:
    path: /etc/tomcat9/server.xml
    xpath: /Server/Service/Connector
    attribute: port
    value: '{{ solr_port }}'

- name: 21 restart_solr
  service:
    name: tomcat9
    state: restarted

- name: 22 wait for status 200 from sorl   
  uri:
    url: '{{ solr_url }}'
  register: _result
  until: _result.status == 200
  retries: 10 # 10 * 1 seconds
  delay: 1 # Every 1 second

# CKAN db
- name: 23 CKAN db init
  command: '{{ ckan_app_dir }}/bin/ckan -c {{ ckan_config_dir }}/ckan.ini db init'
  register: dbinit
  failed_when: "'Initialising DB: SUCCESS' not in dbinit.stdout"

# supervisor
- name: Copy wsgi.py to ckan_config_dir
  copy:
    src: '{{ ckan_app_dir }}/src/ckan/wsgi.py'
    dest: '{{ ckan_config_dir }}/wsgi.py'
    remote_src: yes

- name: pip install uwsgi
  pip:
    name: 'uwsgi'
    virtualenv: '{{ ckan_app_dir }}'
    virtualenv_python: 'python3.7'
    state: present

- name: copy ckan-uwsgi.ini to ckan_config_dir
  copy:
    src: '{{ ckan_app_dir }}/src/ckan/ckan-uwsgi.ini'
    dest: '{{ ckan_config_dir }}/ckan-uwsgi.ini'
    remote_src: yes

- name: ckan-uwsgi.conf
  template:
    src: ckan-uwsgi.conf
    dest: /etc/supervisor/conf.d/ckan-uwsgi.conf
    mode: og+wr
    owner: root
    group: root

# supervisor restart has to be here. and not in notify (notify does not wait for process completion)
- name: restart_supervisor
  service:
    name: supervisor
    state: reloaded

- name: test ckan core GET
  uri:
    url: '{{ ckan_intern_url}}'
    remote_src: yes
  register: _result
  until: _result.status == 200
  retries: 10 # 10 * 1 seconds
  delay: 1 # Every 1 second

# TODO: setup nginx

# Data store/ data pusher/ dcat  extensions to 03_ckan_extensions role